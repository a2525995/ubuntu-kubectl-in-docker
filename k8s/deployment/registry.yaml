apiVersion: apps/v1beta2
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    field.cattle.io/creatorId: user-2xdrm
    field.cattle.io/publicEndpoints: "null"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1beta2","kind":"Deployment","metadata":{"annotations":{"deployment.kubernetes.io/revision":"1","field.cattle.io/creatorId":"user-2xdrm","field.cattle.io/publicEndpoints":"null"},"creationTimestamp":null,"generation":1,"labels":{"workload.user.cattle.io/workloadselector":"deployment-base-registry"},"name":"registry","namespace":"base","selfLink":"/apis/apps/v1beta2/namespaces/base/deployments/registry"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"workload.user.cattle.io/workloadselector":"deployment-base-registry"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":0},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"field.cattle.io/ports":"[[{\"containerPort\":5000,\"dnsName\":\"registry\",\"kind\":\"ClusterIP\",\"name\":\"5000tcp50002\",\"protocol\":\"TCP\",\"sourcePort\":5000}]]"},"creationTimestamp":null,"labels":{"workload.user.cattle.io/workloadselector":"deployment-base-registry"}},"spec":{"affinity":{},"containers":[{"image":"registry","imagePullPolicy":"Always","name":"registry","ports":[{"containerPort":5000,"name":"5000tcp50002","protocol":"TCP"}],"resources":{},"securityContext":{"allowPrivilegeEscalation":false,"privileged":false,"readOnlyRootFilesystem":false,"runAsNonRoot":false},"stdin":true,"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","tty":true,"volumeMounts":[{"mountPath":"/var/lib/registry","name":"vol1"}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"terminationGracePeriodSeconds":30,"volumes":[{"hostPath":{"path":"/mnt/sda1/rancher/registry_data","type":"DirectoryOrCreate"},"name":"vol1"}]}}},"status":{}}
  creationTimestamp: null
  generation: 1
  labels:
    workload.user.cattle.io/workloadselector: deployment-base-registry
  name: registry
  selfLink: /apis/apps/v1beta2/namespaces/base/deployments/registry
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-base-registry
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        field.cattle.io/ports: '[[{"containerPort":5000,"dnsName":"registry","kind":"ClusterIP","name":"5000tcp50002","protocol":"TCP","sourcePort":5000}]]'
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-base-registry
    spec:
      affinity: {}
      containers:
      - image: registry
        imagePullPolicy: Always
        name: registry
        ports:
        - containerPort: 5000
          name: 5000tcp50002
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        volumeMounts:
        - mountPath: /var/lib/registry
          name: vol1
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /mnt/sda1/rancher/registry_data
          type: DirectoryOrCreate
        name: vol1
status: {}
